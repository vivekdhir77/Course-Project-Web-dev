{"ast":null,"code":"var _jsxFileName = \"/Users/anthonycampos/Desktop/WebDev-Course-Project/fe/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nconst API_URL = 'http://localhost:5001/api/auth';\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      try {\n        const payload = JSON.parse(atob(storedToken.split('.')[1]));\n        if (payload.exp * 1000 > Date.now()) {\n          setToken(storedToken);\n          setIsAuthenticated(true);\n          setUser({\n            username: payload.username,\n            role: payload.role,\n            name: payload.name\n          });\n        } else {\n          localStorage.removeItem('token');\n        }\n      } catch (error) {\n        console.error('Error parsing token:', error);\n        localStorage.removeItem('token');\n      }\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await fetch(`${API_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const signup = async userData => {\n    try {\n      const response = await fetch(`${API_URL}/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      token,\n      login,\n      logout,\n      signup\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"PpSD0ltFCKJSLvA5Zpb6eiKJKdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","API_URL","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","token","setToken","localStorage","getItem","storedToken","payload","JSON","parse","atob","split","exp","Date","now","username","role","name","removeItem","error","console","login","password","response","fetch","method","headers","body","stringify","data","json","ok","Error","message","setItem","signup","userData","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/anthonycampos/Desktop/WebDev-Course-Project/fe/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nconst API_URL = 'http://localhost:5001/api/auth';\n\nexport function AuthProvider({ children }) {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      try {\n        const payload = JSON.parse(atob(storedToken.split('.')[1]));\n        if (payload.exp * 1000 > Date.now()) {\n          setToken(storedToken);\n          setIsAuthenticated(true);\n          setUser({\n            username: payload.username,\n            role: payload.role,\n            name: payload.name\n          });\n        } else {\n          localStorage.removeItem('token');\n        }\n      } catch (error) {\n        console.error('Error parsing token:', error);\n        localStorage.removeItem('token');\n      }\n    }\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await fetch(`${API_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const signup = async (userData) => {\n    try {\n      const response = await fetch(`${API_URL}/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ \n      isAuthenticated, \n      user, \n      token,\n      login, \n      logout,\n      signup \n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}