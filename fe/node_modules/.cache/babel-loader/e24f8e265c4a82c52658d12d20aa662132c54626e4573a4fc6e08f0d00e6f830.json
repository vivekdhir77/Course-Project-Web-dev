{"ast":null,"code":"var _jsxFileName = \"/Users/anthonycampos/Desktop/WebDev-Course-Project/fe/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nconst API_URL = 'http://localhost:5001/api/auth';\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        return payload.exp * 1000 > Date.now();\n      } catch {\n        return false;\n      }\n    }\n    return false;\n  });\n  const [user, setUser] = useState(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        if (payload.exp * 1000 > Date.now()) {\n          return {\n            username: payload.username,\n            role: payload.role,\n            name: payload.name\n          };\n        }\n      } catch {\n        return null;\n      }\n    }\n    return null;\n  });\n  const [token, setToken] = useState(() => localStorage.getItem('token'));\n  const login = async (username, password) => {\n    try {\n      const response = await fetch(`${API_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const signup = async userData => {\n    try {\n      const response = await fetch(`${API_URL}/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      token,\n      login,\n      logout,\n      signup\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"5c5SnfOIlkk8fD2c4xEj0eOXD9o=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AuthContext","API_URL","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","payload","JSON","parse","atob","split","exp","Date","now","user","setUser","username","role","name","setToken","login","password","response","fetch","method","headers","body","stringify","data","json","ok","Error","message","setItem","error","signup","userData","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/anthonycampos/Desktop/WebDev-Course-Project/fe/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nconst API_URL = 'http://localhost:5001/api/auth';\n\nexport function AuthProvider({ children }) {\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        return payload.exp * 1000 > Date.now();\n      } catch {\n        return false;\n      }\n    }\n    return false;\n  });\n\n  const [user, setUser] = useState(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        if (payload.exp * 1000 > Date.now()) {\n          return {\n            username: payload.username,\n            role: payload.role,\n            name: payload.name\n          };\n        }\n      } catch {\n        return null;\n      }\n    }\n    return null;\n  });\n\n  const [token, setToken] = useState(() => localStorage.getItem('token'));\n\n  const login = async (username, password) => {\n    try {\n      const response = await fetch(`${API_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const signup = async (userData) => {\n    try {\n      const response = await fetch(`${API_URL}/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message);\n      }\n\n      localStorage.setItem('token', data.token);\n      setToken(data.token);\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ \n      isAuthenticated, \n      user, \n      token,\n      login, \n      logout,\n      signup \n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}